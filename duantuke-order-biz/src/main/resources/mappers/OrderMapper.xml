<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.duantuke.order.mappers.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.duantuke.order.model.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="sales_id" property="salesId" jdbcType="BIGINT" />
    <result column="sales_name" property="salesName" jdbcType="VARCHAR" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="supplier_phone" property="supplierPhone" jdbcType="VARCHAR" />
    <result column="cancel_reason" property="cancelReason" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithOrderDetails" type="com.duantuke.order.model.Order"
	extends="BaseResultMap">
	<collection property="orderDetails" 
		ofType="com.duantuke.order.model.OrderDetail"
		javaType="java.util.ArrayList">
		<id column="detail_id" property="id" jdbcType="BIGINT" />
	    <result column="order_id" property="orderId" jdbcType="BIGINT" />
	    <result column="sku_id" property="skuId" jdbcType="BIGINT" />
	    <result column="sku_name" property="skuName" jdbcType="VARCHAR" />
	    <result column="sku_type" property="skuType" jdbcType="INTEGER" />
	    <result column="num" property="num" jdbcType="INTEGER" />
	    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
	    <result column="detail_create_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="detail_create_by" property="createBy" jdbcType="VARCHAR" />
	    <result column="detail_update_time" property="updateTime" jdbcType="TIMESTAMP" />
	    <result column="detail_update_by" property="updateBy" jdbcType="VARCHAR" />
	    <collection property="priceDetails" 
			ofType="com.duantuke.order.model.OrderDetailPrice"
			javaType="java.util.ArrayList">
			<id column="price_id" property="id" jdbcType="BIGINT" />
		    <result column="price_order_id" property="orderId" jdbcType="BIGINT" />
		    <result column="price_order_detail_id" property="orderDetailId" jdbcType="BIGINT" />
		    <result column="price_sku_id" property="skuId" jdbcType="BIGINT" />
		    <result column="price_sku_name" property="skuName" jdbcType="VARCHAR" />
		    <result column="price" property="price" jdbcType="DECIMAL" />
		    <result column="action_time" property="actionTime" jdbcType="TIMESTAMP" />
		    <result column="price_create_time" property="createTime" jdbcType="TIMESTAMP" />
		    <result column="price_create_by" property="createBy" jdbcType="VARCHAR" />
		    <result column="price_update_time" property="updateTime" jdbcType="TIMESTAMP" />
		    <result column="price_update_by" property="updateBy" jdbcType="VARCHAR" />
		</collection>
	</collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, status, pay_type, pay_status, total_price,discount, contact, contact_phone, customer_id, 
    sales_id, sales_name,begin_time,end_time, supplier_id, supplier_name,supplier_phone, cancel_reason,flag, memo, create_time, create_by, update_time, 
    update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.duantuke.order.model.Order" useGeneratedKeys="true" keyProperty="id">
    insert into orders (id, type, status, 
      pay_type, pay_status, total_price, discount, 
      contact, contact_phone, customer_id, 
      sales_id, sales_name, supplier_id, 
      supplier_name,supplier_phone,beign_time,end_time,cancel_reason,flag, memo, create_time, 
      create_by, update_time, update_by
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, #{totalPrice,jdbcType=DECIMAL}, #{discount,jdbcType=DECIMAL},
      #{contact,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, #{customerId,jdbcType=BIGINT}, 
      #{salesId,jdbcType=BIGINT},#{salesName,jdbcType=VARCHAR}, #{supplierId,jdbcType=BIGINT}, 
      #{supplierName,jdbcType=VARCHAR},#{supplierPhone,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},
      #{cancel_reason,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR},#{memo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.duantuke.order.model.Order" useGeneratedKeys="true" keyProperty="id">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="salesId != null" >
        sales_id,
      </if>
      <if test="salesName != null" >
        sales_name,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="supplierName != null" >
        supplier_name,
      </if>
      <if test="supplierPhone != null" >
        supplier_phone,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
       <if test="cancelReason != null" >
        cancelReason,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="salesId != null" >
        #{salesId,jdbcType=BIGINT},
      </if>
      <if test="salesName != null" >
        #{salesName,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null" >
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierPhone != null" >
        #{supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelReason != null" >
        #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.duantuke.order.model.Order" >
    update orders
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="salesId != null" >
        sales_id = #{salesId,jdbcType=BIGINT},
      </if>
      <if test="salesName != null" >
        sales_name = #{salesName,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null" >
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierPhone != null" >
        supplier_phone = #{supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null" >
        beign_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelReason != null" >
        cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duantuke.order.model.Order" >
    update orders
    set type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      contact = #{contact,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=BIGINT},
      sales_id = #{salesId,jdbcType=BIGINT},
      sales_name = #{salesName,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      supplier_phone = #{supplierPhone,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryOrdersAndDetails" resultMap="BaseResultMap" parameterType="map" >
		SELECT 
			a.id,
			a.type,
			a.status,
			a.pay_type,
			a.pay_status,
			a.total_price,
			a.discount,
			a.contact,
			a.contact_phone,
			a.customer_id,
			a.sales_id,
			a.sales_name,
			a.begin_time,
			a.end_time,
			a.cancel_reason,
			a.flag,
			a.memo,
			a.create_time,
			a.create_by,
			a.update_time,
			a.update_by
		FROM orders AS a
		LEFT JOIN order_details AS b ON a.id = b.order_id 
		WHERE a.type = #{orderType,jdbcType=INTEGER}
  </select>
  <select id="queryOrders" resultMap="BaseResultMap" parameterType="map" >
		SELECT 
			id,
			type,
			status,
			pay_type,
			pay_status,
			total_price,
			discount,
			contact,
			contact_phone,
			customer_id,
			supplier_id,
			supplier_name,
			supplier_phone,
			sales_id,
			sales_name,
			begin_time,
			end_time,
			cancel_reason,
			flag,
			memo,
			create_time,
			create_by,
			update_time,
			update_by
		FROM orders 
		<trim prefix="WHERE" prefixOverrides="AND|OR ">
		 <if test="supplierId != null">
	    	AND supplier_id = #{supplierId,jdbcType=BIGINT}
	     </if>
		 <if test="type != null">
	    	AND type = #{orderType,jdbcType=INTEGER}
	     </if>
	     <if test="orderStatus != null">
	     	AND status in 
		     <foreach collection="orderStatus" index="index" item="item" open="(" separator="," close=")">
	            #{item,jdbcType=INTEGER}
	         </foreach>
	     </if>
	     <if test="payType != null">
	    	AND pay_type = #{payType,jdbcType=INTEGER}
	     </if>
	     <if test="payStatus != null">
	    	AND pay_status = #{payStatus,jdbcType=INTEGER}
	     </if>
	     <if test="contact != null">
	    	AND contact = #{contact,jdbcType=VARCHAR}
	     </if>
	     <if test="contactPhone != null">
	    	AND contactPhone = #{contactPhone,jdbcType=VARCHAR}
	     </if>
	     <if test="customerId != null">
	    	AND customer_id = #{customerId,jdbcType=BIGINT}
	     </if>
	     <if test="salesId != null">
	    	AND sales_id = #{salesId,jdbcType=BIGINT}
	     </if>
	     <if test="startDate != null">
	    	AND begin_time &gt; #{startDate,jdbcType=TIMESTAMP}
	     </if>
	      <if test="endDate != null">
	    	AND begin_time &lt; #{endDate,jdbcType=TIMESTAMP}
	     </if>
	    </trim>
	    ORDER BY id DESC
		LIMIT #{startNum, jdbcType=INTEGER} ,#{pageSize, jdbcType=INTEGER}
  </select>
  <select id="queryOrdersCount" resultType="int" parameterType="map" >
		SELECT 
			count(1) 
		FROM orders 
		<trim prefix="WHERE" prefixOverrides="AND|OR ">
		 <if test="supplierId != null">
	    	AND supplier_id = #{supplierId,jdbcType=BIGINT}
	     </if>
		 <if test="type != null">
	    	AND type = #{orderType,jdbcType=INTEGER}
	     </if>
	     <if test="status != null">
	    	AND status = #{orderStatus,jdbcType=INTEGER}
	     </if>
	     <if test="payType != null">
	    	AND pay_type = #{payType,jdbcType=INTEGER}
	     </if>
	     <if test="payStatus != null">
	    	AND pay_status = #{payStatus,jdbcType=INTEGER}
	     </if>
	     <if test="contact != null">
	    	AND contact = #{contact,jdbcType=VARCHAR}
	     </if>
	     <if test="contactPhone != null">
	    	AND contactPhone = #{contactPhone,jdbcType=VARCHAR}
	     </if>
	     <if test="customerId != null">
	    	AND customer_id = #{customerId,jdbcType=BIGINT}
	     </if>
	     <if test="salesId != null">
	    	AND sales_id = #{salesId,jdbcType=BIGINT}
	     </if>
	     <if test="startDate != null">
	    	AND create_time &gt; #{startDate,jdbcType=TIMESTAMP}
	     </if>
	      <if test="endDate != null">
	    	AND create_time &lt; #{endDate,jdbcType=TIMESTAMP}
	     </if>
	    </trim>
  </select>
  <select id="selectOrderAndDetailsById" resultMap="ResultMapWithOrderDetails" parameterType="java.lang.Long" >
    SELECT 
    	a.id,
		a.type,
		a.status,
		a.pay_type,
		a.pay_status,
		a.total_price,
		a.discount,
		a.contact,
		a.contact_phone,
		a.customer_id,
		a.sales_id,
		a.sales_name,
		a.supplier_id,
		a.supplier_name,
		a.supplier_phone,
		a.begin_time,
		a.end_time,
		a.cancel_reason,
		a.flag,
		a.memo,
		a.create_time,
		a.create_by,
		a.update_time,
		a.update_by,
		b.id as detail_id,
		b.order_id,
		b.sku_id,
		b.sku_name,
		b.sku_type,
		b.num,
		b.total_price,
		b.create_time as detail_create_time,
		b.create_by as detail_create_by,
		b.update_time as detail_update_time,
		b.update_by as detail_update_by,
		c.id AS price_id,
		c.order_id as price_order_id,
		c.order_detail_id as price_order_detail_id,
		c.action_time,
		c.price,
		c.sku_id as price_sku_id,
		c.sku_name as price_sku_name,
		c.create_by as price_create_by,
		c.create_time as price_create_time,
		c.update_by as price_update_by,
		c.update_time as price_update_time
    FROM orders AS a 
    LEFT JOIN order_details AS b ON a.id = b.order_id 
	LEFT JOIN order_details_price AS c ON c.order_detail_id = b.id
    WHERE a.id = #{id,jdbcType=BIGINT}
  </select>
   <update id="cancelOrder" parameterType="com.duantuke.order.model.Order" >
    update orders
    set status = #{status,jdbcType=INTEGER},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateOrderStatus" parameterType="com.duantuke.order.model.Order" >
    update orders
    set status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryOrdersByEndTime" resultMap="BaseResultMap" parameterType="map" >
		SELECT 
			id,
			type,
			status,
			pay_type,
			pay_status,
			total_price,
			discount,
			contact,
			contact_phone,
			customer_id,
			supplier_id,
			supplier_name,
			supplier_phone,
			sales_id,
			sales_name,
			begin_time,
			end_time,
			cancel_reason,
			flag,
			memo,
			create_time,
			create_by,
			update_time,
			update_by
		FROM orders 
		WHERE end_time &lt; #{endTime,jdbcType=TIMESTAMP}
		AND status = #{status,jdbcType=INTEGER} 
	    ORDER BY id DESC
  </select>
  <update id="updateOrderInfoAfterCreated" parameterType="com.duantuke.order.model.Order" >
    update orders
    set sales_id = #{salesId,jdbcType=INTEGER},
      sales_name = #{salesName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateOrderAfterPaid" parameterType="com.duantuke.order.model.Order" >
    update orders
    set status = #{status,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateOrderAfterRefunded" parameterType="com.duantuke.order.model.Order" >
    update orders
    set pay_status = #{payStatus,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryOrdersToCancel" resultMap="BaseResultMap" parameterType="map" >
		SELECT 
			id,
			type,
			status,
			pay_type,
			pay_status,
			total_price,
			discount,
			contact,
			contact_phone,
			customer_id,
			supplier_id,
			supplier_name,
			supplier_phone,
			sales_id,
			sales_name,
			begin_time,
			end_time,
			cancel_reason,
			flag,
			memo,
			create_time,
			create_by,
			update_time,
			update_by
		FROM orders 
		WHERE pay_status = #{payStatus,jdbcType=INTEGER}
		AND status = #{status,jdbcType=INTEGER} 
		AND create_time &lt; date_add(now(),interval -#{time,jdbcType=INTEGER} minute)
	    ORDER BY id DESC
  </select>
</mapper>